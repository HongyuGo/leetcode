solution 1   
 bool findNumberIn2DArray(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        if(m == 0)return false;
        int n = matrix[0].size(); 
        if(n == 0) return false;
        bool real_flag = false;
        for(int i = 0; i<m; i++)
            {
                real_flag = find_binary(0,n-1,matrix,target,i);
                if (real_flag == true) return true;
            }
        return false;


    }
    bool find_binary(int l, int r, vector<vector<int>> & matrix,int target,int row)
        {
            int mid = 0;
            while(l < r)
            {
                mid = (l+r) / 2;
                if(matrix[row][mid] >= target) r = mid;
                else l = mid + 1; 
            }
            if(matrix[row][r] == target) return true;
            else return false;
        }

solution
利用二叉搜索树的方式来进行查找，重点方案
       int i = 0;
       if(matrix.size() == 0)
            return false;
       int j = matrix[0].size() - 1;
       while(i <= matrix.size()- 1 && j >=0)
       {
           if(target > matrix[i][j])
                i = i + 1;
           else if (target < matrix[i][j])
                j = j - 1;
           else
                return true;

       }
       return false;